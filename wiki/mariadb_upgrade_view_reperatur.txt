drop view mcp_oia.itemevent;
drop view analyse.view__micropaymentcustodian;
drop view analyse.view__micropaymentreseller;
drop view analyse.view_providerstatistic_creditcardterminal;
drop view analyse.view_providerstatistic_creditcardterminal_upload;



CREATE ALGORITHM=UNDEFINED DEFINER=`worker`@`localhost` SQL SECURITY DEFINER VIEW `mcp_oia`.`itemevent` AS select `mcp_oia`.`event`.`event_id` AS `event_id`,`mcp_oia`.`item`.`mandator` AS `mandator`,`mcp_oia`.`item`.`account` AS `account`,`mcp_oia`.`item`.`paytype` AS `paytype`,`mcp_oia`.`item`.`createdon` AS `paytime`,`mcp_oia`.`item`.`paytoken` AS `paytoken`,`mcp_oia`.`item`.`paytext` AS `paytext`,`mcp_oia`.`event`.`type` AS `eventtype`,`mcp_oia`.`event`.`createdon` AS `eventtime`,`mcp_oia`.`event`.`orderamount` AS `orderamount`,`mcp_oia`.`event`.`paidamount` AS `paidamount`,`mcp_oia`.`event`.`state` AS `state` from (`mcp_oia`.`event` left join `mcp_oia`.`item` on(`mcp_oia`.`item`.`item_id` = `mcp_oia`.`event`.`item_ref`));

CREATE ALGORITHM=UNDEFINED DEFINER=`worker`@`localhost` SQL SECURITY DEFINER VIEW `analyse`.`view__micropaymentcustodian` AS select `a`.`account_id` AS `account_id`,`a`.`name` AS `account_name`,`a`.`mandator_ref` AS `mandator_ref`,(select if(`pd`.`flags` & 8 = 8,concat(`pd`.`company`,_latin1'||',`pd`.`firstname`,_latin1' ',`pd`.`surname`),concat(`pd`.`firstname`,_latin1' ',`pd`.`surname`)) AS `r` from `fullpbc`.`personaldata` `pd` where `pd`.`account_ref` = `a`.`account_id` and `pd`.`disabled` is null) AS `label`,(select if(`pd`.`flags` & 8 = 8,concat(`pd`.`company`,_latin1'||',`pd`.`firstname`,_latin1' ',`pd`.`surname`),concat(`pd`.`firstname`,_latin1' ',`pd`.`surname`)) AS `r` from `fullpbc`.`personaldata` `pd` where `pd`.`account_ref` = `a`.`account_id` and `pd`.`disabled` is null) AS `order`,`a`.`created` AS `custodian_created`,(select count(0) AS `ca` from `fullpbc`.`account` `r` where `r`.`custodian_ref` = `a`.`account_id` and `r`.`disabled` is null) AS `custodian_accounts`,(select count(0) AS `cp` from (`fullpbc`.`account` `r` left join `fullpbc`.`project` `p` on(`p`.`account_ref` = `r`.`account_id`)) where `r`.`custodian_ref` = `a`.`account_id` and `r`.`disabled` is null and `p`.`disabled` is null) AS `custodian_projects` from `fullpbc`.`account` `a` where `a`.`account_id` in (select `fullpbc`.`account`.`custodian_ref` AS `custodian_ref` from `fullpbc`.`account` where `fullpbc`.`account`.`custodian_ref` is not null);

CREATE ALGORITHM=UNDEFINED DEFINER=`worker`@`localhost` SQL SECURITY DEFINER VIEW `analyse`.`view__micropaymentreseller` AS select `a`.`account_id` AS `account_id`,`a`.`name` AS `account_name`,`a`.`mandator_ref` AS `mandator_ref`,(select if(`pd`.`flags` & 8 = 8,concat(`pd`.`company`,_latin1'||',`pd`.`firstname`,_latin1' ',`pd`.`surname`),concat(`pd`.`firstname`,_latin1' ',`pd`.`surname`)) AS `r` from `fullpbc`.`personaldata` `pd` where `pd`.`account_ref` = `a`.`account_id` and `pd`.`disabled` is null) AS `label`,(select if(`pd`.`flags` & 8 = 8,concat(`pd`.`company`,_latin1'||',`pd`.`firstname`,_latin1' ',`pd`.`surname`),concat(`pd`.`firstname`,_latin1' ',`pd`.`surname`)) AS `r` from `fullpbc`.`personaldata` `pd` where `pd`.`account_ref` = `a`.`account_id` and `pd`.`disabled` is null) AS `order`,`a`.`created` AS `reseller_created`,(select count(0) AS `ca` from `fullpbc`.`account` `r` where `r`.`reseller_ref` = `a`.`account_id` and `r`.`disabled` is null) AS `reseller_accounts`,(select count(0) AS `cp` from `fullpbc`.`project` `p` where `p`.`reseller_ref` = `a`.`account_id` and `p`.`disabled` is null) AS `reseller_projects` from `fullpbc`.`account` `a` where `a`.`flags` & 64;

CREATE ALGORITHM=UNDEFINED DEFINER=`worker`@`localhost` SQL SECURITY DEFINER VIEW `analyse`.`view_providerstatistic_creditcardterminal` AS select `s`.`year` AS `year`,`s`.`month` AS `month`,`s`.`mandator_ref` AS `mandator_ref`,`s`.`account_ref` AS `account_ref`,`s`.`terminal` AS `terminal`,if(`pd`.`flags` & 8,`pd`.`company`,if(`pd`.`nameaffix` is not null,concat(`pd`.`firstname`,_latin1' ',`pd`.`surname`,_latin1' | ',`pd`.`nameaffix`),concat(`pd`.`firstname`,_latin1' ',`pd`.`surname`))) AS `name`,case `s`.`group` when _utf8'reconciliation' then _utf8'001030010401' when _utf8'monthly' then _utf8'001030010248' when _utf8'setup' then _utf8'001040010501' when _utf8'setupapi' then _utf8'001040010501' else if(`s`.`status` = _utf8'error',_utf8'001030010275',case `s`.`cardtype` when _utf8'visa' then _utf8'001030010280' when _utf8'master' then _utf8'001030010278' when _utf8'amex' then _utf8'001030010279' else concat(_utf8'TODO: ArtikelNr. `',ucase(`s`.`cardtype`),_utf8'` an Yves') end) end AS `article`,case `s`.`group` when _utf8'reconciliation' then _utf8'Trx Verwaltung (Schätzung)' when _utf8'monthly' then _utf8'Monatspauschale' when _utf8'setup' then _utf8'Einrichtung IPG' when _utf8'setupapi' then _utf8'Einrichtung IPG (API)' else if(`s`.`status` = _utf8'error',_utf8'Trx Fehler',concat(_utf8'Trx ',ucase(`s`.`cardtype`))) end AS `label`,sum(`s`.`cnt`) AS `cnt`,`s`.`unitcost` AS `unitcost`,sum(`s`.`cnt` * `s`.`unitcost`) AS `sum` from ((`analyse`.`providerstatistic_creditcardterminal` `s` left join `fullpbc`.`account` `acc` on(`acc`.`account_id` = `s`.`account_ref`)) left join `fullpbc`.`personaldata` `pd` on(`pd`.`personaldata_id` = `acc`.`personaldata_ref`)) where `s`.`cardtype` in (_utf8'visa',_utf8'master',_utf8'amex',_utf8'') group by `s`.`year`,`s`.`month`,`s`.`mandator_ref`,`s`.`account_ref`,`s`.`terminal`,case `s`.`group` when _utf8'reconciliation' then _utf8'001030010401' when _utf8'monthly' then _utf8'001030010248' when _utf8'setup' then _utf8'001040010501' when _utf8'setupapi' then _utf8'001040010501' else if(`s`.`status` = _utf8'error',_utf8'001030010275',case `s`.`cardtype` when _utf8'visa' then _utf8'001030010280' when _utf8'master' then _utf8'001030010278' when _utf8'amex' then _utf8'001030010279' else concat(_utf8'TODO: ArtikelNr. `',ucase(`s`.`cardtype`),_utf8'` an Yves') end) end;

CREATE ALGORITHM=UNDEFINED DEFINER=`worker`@`localhost` SQL SECURITY DEFINER VIEW `analyse`.`view_providerstatistic_creditcardterminal_upload` AS select `s`.`year` AS `year`,`s`.`month` AS `month`,`s`.`mandator_ref` AS `mandator_ref`,`s`.`account_ref` AS `account_ref`,`s`.`terminal` AS `terminal`,if(`pd`.`flags` & 8,`pd`.`company`,if(`pd`.`nameaffix` is not null,concat(`pd`.`firstname`,_latin1' ',`pd`.`surname`,_latin1' | ',`pd`.`nameaffix`),concat(`pd`.`firstname`,_latin1' ',`pd`.`surname`))) AS `name`,case `s`.`group` when _utf8'reconciliation' then _utf8'001030010401' when _utf8'monthly' then _utf8'001030010248' when _utf8'setup' then _utf8'001040010501' when _utf8'setupapi' then _utf8'001040010501' else if(`s`.`status` = _utf8'error',_utf8'001030010275',case `s`.`cardtype` when _utf8'visa' then _utf8'001030010280' when _utf8'master' then _utf8'001030010278' when _utf8'amex' then _utf8'001030010279' else concat(_utf8'TODO: ArtikelNr. `',ucase(`s`.`cardtype`),_utf8'` an Yves') end) end AS `article`,case `s`.`group` when _utf8'reconciliation' then _utf8'Trx Verwaltung (Schätzung)' when _utf8'monthly' then _utf8'Monatspauschale' when _utf8'setup' then _utf8'Einrichtung IPG' when _utf8'setupapi' then _utf8'Einrichtung IPG (API)' else if(`s`.`status` = _utf8'error',_utf8'Trx Fehler',concat(_utf8'Trx ',ucase(`s`.`cardtype`))) end AS `label`,sum(`s`.`cnt`) AS `cnt`,`s`.`unitcost` AS `unitcost`,sum(`s`.`cnt` * `s`.`unitcost`) AS `sum` from ((`analyse`.`providerstatistic_creditcardterminal_upload` `s` left join `fullpbc`.`account` `acc` on(`acc`.`account_id` = `s`.`account_ref`)) left join `fullpbc`.`personaldata` `pd` on(`pd`.`personaldata_id` = `acc`.`personaldata_ref`)) where `s`.`cardtype` in (_utf8'visa',_utf8'master',_utf8'amex',_utf8'') group by `s`.`year`,`s`.`month`,`s`.`mandator_ref`,`s`.`account_ref`,`s`.`terminal`,case `s`.`group` when _utf8'reconciliation' then _utf8'001030010401' when _utf8'monthly' then _utf8'001030010248' when _utf8'setup' then _utf8'001040010501' when _utf8'setupapi' then _utf8'001040010501' else if(`s`.`status` = _utf8'error',_utf8'001030010275',case `s`.`cardtype` when _utf8'visa' then _utf8'001030010280' when _utf8'master' then _utf8'001030010278' when _utf8'amex' then _utf8'001030010279' else concat(_utf8'TODO: ArtikelNr. `',ucase(`s`.`cardtype`),_utf8'` an Yves') end) end;

